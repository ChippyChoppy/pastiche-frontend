[{"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Containers/NavBar.js":"1","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/App.js":"2","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/MocktailCard.js":"3","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Containers/ViewContainer.js":"4","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/NewMocktailForm.js":"5","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/CardBack.js":"6","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/CardFront.js":"7","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/UserProfile.js":"8","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/RandDCard.js":"9","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/Buttons.js":"10","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Containers/MyContainer.js":"11","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Containers/Header.js":"12","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Containers/ProfileSidebar.js":"13","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Containers/MocktailContainer.js":"14","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/CardNote.js":"15","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/index.js":"16"},{"size":1913,"mtime":1611846244867,"results":"17","hashOfConfig":"18"},{"size":1128,"mtime":1611808386400,"results":"19","hashOfConfig":"18"},{"size":2925,"mtime":1611825557532,"results":"20","hashOfConfig":"18"},{"size":5781,"mtime":1611853029806,"results":"21","hashOfConfig":"18"},{"size":7921,"mtime":1611696843668,"results":"22","hashOfConfig":"18"},{"size":3949,"mtime":1611851798013,"results":"23","hashOfConfig":"18"},{"size":1559,"mtime":1611802848322,"results":"24","hashOfConfig":"18"},{"size":1179,"mtime":1611696877236,"results":"25","hashOfConfig":"18"},{"size":1059,"mtime":1611123199505,"results":"26","hashOfConfig":"18"},{"size":458,"mtime":1611554189368,"results":"27","hashOfConfig":"18"},{"size":811,"mtime":1611780168829,"results":"28","hashOfConfig":"18"},{"size":463,"mtime":1611800704010,"results":"29","hashOfConfig":"18"},{"size":753,"mtime":1611696795268,"results":"30","hashOfConfig":"18"},{"size":1267,"mtime":1611831883783,"results":"31","hashOfConfig":"18"},{"size":2799,"mtime":1611852710847,"results":"32","hashOfConfig":"18"},{"size":500,"mtime":1611033246345,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"k0lous",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Containers/NavBar.js",["69","70"],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/App.js",["71","72"],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/MocktailCard.js",[],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Containers/ViewContainer.js",["73"],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/NewMocktailForm.js",["74"],"import React from 'react'   \nimport styled from 'styled-components'\n\nclass NewMocktailForm extends React.Component {\n\n    state = {\n        name: \"\",\n        creator: \"\",\n        image: \"\",\n        glassware: \"\",\n        instructions: \"\",\n        creator: \"\",\n        // ingredientNumber: 0,\n        rAndD: true,\n        mockTags: [{\n            mocktailId: null,\n            tagId: \"\"\n        }],\n        mockIngreds: {\n            measurementId: \"\",\n            ingredientId: \"\"\n        },\n        usersMocktails: {\n            userId: \"\",\n        }\n    }\n\n    changeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    \n    mockIngredChangeHandler = (e) => {\n        this.setState({ mockIngreds: {...this.state.mockIngreds, [e.target.name]: e.target.value} })\n    }\n\n    // mockMeasureChangeHandler = (e) => {\n    //     this.setState({ mockIngreds:{[e.target.name]: e.target.value} })\n    // }\n\n\n\n    submitHandler = (e) => {\n        e.preventDefault()\n        this.props.submitHandler(this.state)\n    }\n    \n    renderMeasurementList = () => {\n        return (\n            this.props.measurementArray.map((measurement) => {\n                return (\n                    <option\n                        key={measurement.id}\n                        type=\"\"\n                        name=\"mockIngreds.measurementId\"\n                        // placeholder=\"imperial/metric\"\n                        value={measurement.id}>\n                        {measurement.imperial} / {measurement.metric}\n                    </option>\n                )\n            })\n        )\n    }\n\n    renderIngredientList = () => {\n        return (\n            this.props.ingredientArray.map((ingredient) => {\n                return (\n                    <option\n                        key={ingredient.id}\n                        type=\"\"\n                        name=\"mockIngreds.ingredientId\"\n                        // placeholder=\"Ingredient\"\n                        value={ingredient.id}>\n                        {ingredient.name}\n                    </option>\n                )\n            })\n        )\n    }\n\n    renderTags = () => {\n        return (\n            this.props.tagArray.map((tag) => {\n                return (\n                    <FormButton \n                        onClick=\"\"\n                        key={tag.id}\n                        type=\"\"\n                        name=\"mockTag.tagId\"\n                        value={tag.tag}>\n                        {tag.tag}\n                     </FormButton>\n                )\n                \n            })\n        )\n    }\n\n    // addIngredient = () => {\n    //     this.setState({ ingredientNumber: this.state.ingredientNumber + 1 })\n    // }\n    // renderMoreIngreds = () => {\n    //     let mock_ingreds = []\n    //     for (let i = 0; i <= this.state.ingredientNumber; i++) {\n    //         mock_ingreds.push(\n    //             <label>\n    //                 <select>\n    //                     {this.renderMeasurementList()}\n    //                 </select>\n    //                 <select  >\n    //                     {this.renderIngredientList()}\n    //                 </select>\n    //             </label>\n    //         )\n    //         return mock_ingreds\n    //     }\n\n    renderMoreIngreds = (e) => {\n        e.preventDefault()\n        console.log(\"clicked\")\n        return (\n            <label>\n                <select>\n                    {this.renderMeasurementList()}\n                </select>\n                <select  >\n                    {this.renderIngredientList()}\n                </select>\n            </label>\n        )\n    }\n\n    renderMoreClickHandler = () => {\n        \n    }\n\nrender() {\n    // console.log(this.state)\n    return (\n        <FormWrapper>\n        <CreateDiv>        \n            <h2>Submit a new Mocktail</h2>\n        </CreateDiv>\n           <TheFormItself onSubmit={this.submitHandler}>\n            <FormLabel>\n                Name: <br/>\n                    <FormInput\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"mocktail name\"\n                    value={this.state.name}\n                    onChange={this.changeHandler} />\n            </FormLabel>\n            <br />\n            <FormLabel>\n                Created by: <br/>\n                    <FormInput\n                    type=\"text\"\n                    name=\"creator\"\n                    placeholder=\"creator name\"\n                    value={this.state.creator}\n                    onChange={this.changeHandler} />\n            </FormLabel>\n            <br />\n            <FormLabel>\n                Image: <br/>\n                    <FormInput\n                    type=\"text\"\n                    name=\"image\"\n                    placeholder=\"image url\"\n                    value={this.state.image}\n                    onChange={this.changeHandler} />\n            </FormLabel>\n            <br />\n            <FormLabel>\n                Glassware: <br/>\n                    <FormInput\n                    type=\"text\"\n                    name=\"glassware\"\n                    placeholder=\"serving glass\"\n                    value={this.state.glassware}\n                    onChange={this.changeHandler} />\n            </FormLabel>\n            <br />\n            <FormLabel>\n                Ingredients: \n                    <br />\n                <select \n                    name=\"measurementId\" \n                    onChange={this.mockIngredChangeHandler} >\n                    {this.renderMeasurementList()}\n                </select>\n                <select\n                    name=\"ingredientId\"\n                    onChange={this.mockIngredChangeHandler}>\n                    {this.renderIngredientList()}\n                </select>\n                <FormButton onClick={()=> this.renderMoreIngreds}>+ This button should render another measurement/ingredient dropdown+</FormButton>\n            </FormLabel>\n            <br />\n            <FormLabel>\n                Instructions: <br/>\n                    <TextArea \n                        type=\"text\" \n                        name=\"instructions\"\n                        placeholder=\"tell me how to make this\"\n                        value={this.state.instructions} \n                        onChange={this.changeHandler} />\n            </FormLabel>\n            <br />\n            <FormLabel>Tag: \n                    <br />\n                {this.renderTags()}\n            </FormLabel>\n            <br />\n            <FormInput type=\"submit\" value=\"Submit\" />\n        </TheFormItself> \n        </FormWrapper>\n        \n    )\n}\n}\n\nexport default NewMocktailForm\n\nconst FormWrapper = styled.div `\n    width: 70%;\n    margin: 10px;\n    padding: 20px;\n    border: 2px solid #fec196;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n`\n\nconst CreateDiv = styled.div `\n    width: 80%\n`\n\nconst TheFormItself = styled.form `\n    border: 5px solid: #d9919a;\n    padding: 5px;\n`\n\nconst TextArea = styled.textarea `\nwidth: 35%;\nheight: 150px;\npadding: 12px 20px;\nbox-sizing: border-box;\nborder: 5px solid #d9919a;\nborder-radius: 8px;\nborder-style: inset;\nbackground-color: #fefbfa;\nresize: auto;\n`\n\nconst FormInput = styled.input `\n    flex-basis: auto;\n    width: 35%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    box-sizing: border-box;\n    border: 5px solid #d9919a;\n    border-radius: 8px;\n    border-style: inset;\n    background-color: #fefbfa;\n    :focus {\n        background-color: #480a1b;\n        color: #fefbfa;\n        border: 5px solid #fec196;\n        border-style: inset;\n    }\n`\nconst FormLabel = styled.label `\n    \n`\n\nconst FormButton = styled.button `\n    background-color: #fec196;\n    border: 3px solid #d9919a;\n    margin: 5px;\n    border-radius: 8px;\n    border-style: outset;\n    padding: 8px;\n    :hover {\n        background-color: #d9919a;\n        border: 3px solid #fec196;\n        border-style: inset;\n    }\n\n`",["75","76"],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/CardBack.js",["77","78"],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/CardFront.js",[],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/UserProfile.js",["79"],"import React from 'react'\nimport styled from 'styled-components'\n\nclass UserProfile extends React.Component {\n\n    renderUserProfile = () => {\n        return (\n            <Profile>\n                <li>{this.props.user.first_name}</li>\n                <ProfileImage alt={this.props.user.first_name} src={this.props.user.image} />\n                <li>\n                    About: \n                    <br/>\n                    {this.props.user.bio}\n                </li>\n            </Profile>\n\n        )\n    }\n    render() {\n        // console.log(this.props)\n        return (\n            <ProfileWrapper>\n                <h2>user profile</h2>\n                {this.renderUserProfile()}\n            </ProfileWrapper>\n        )\n    }\n}\n\nexport default UserProfile\n\nconst ProfileWrapper = styled.div `\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    padding: 15px;\n\n`\n\nconst ProfileList = styled.li `\ndisplay: block;\nwidth: 20%;\n`\n\nconst Profile = styled.ul `\n    width: 100%;\n    padding: 15px;\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n`\n\nconst ProfileImage = styled.img `\n    max-height: 175px;\n    object-fit: contain;\n    justify-content: center;\n`","/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/RandDCard.js",[],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/Buttons.js",[],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Containers/MyContainer.js",["80"],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Containers/Header.js",[],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Containers/ProfileSidebar.js",[],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Containers/MocktailContainer.js",["81","82"],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/Components/CardNote.js",["83","84"],"/Users/rebeccarobbins/Flatiron/code/mod-5/pastiche/pastiche-frontend/src/index.js",[],{"ruleId":"85","severity":1,"message":"86","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":22},{"ruleId":"85","severity":1,"message":"89","line":51,"column":7,"nodeType":"87","messageId":"88","endLine":51,"endColumn":14},{"ruleId":"85","severity":1,"message":"90","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"91","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":14},{"ruleId":"85","severity":1,"message":"89","line":155,"column":7,"nodeType":"87","messageId":"88","endLine":155,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":12,"column":9,"nodeType":"94","messageId":"95","endLine":12,"endColumn":16},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":28,"column":57,"nodeType":"102","messageId":"103","endLine":28,"endColumn":59},{"ruleId":"100","severity":1,"message":"101","line":41,"column":58,"nodeType":"102","messageId":"103","endLine":41,"endColumn":60},{"ruleId":"85","severity":1,"message":"104","line":41,"column":7,"nodeType":"87","messageId":"88","endLine":41,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":7,"column":5,"nodeType":"107","messageId":"108","endLine":7,"endColumn":65},{"ruleId":"85","severity":1,"message":"109","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":17},{"ruleId":"105","severity":1,"message":"106","line":7,"column":5,"nodeType":"107","messageId":"108","endLine":7,"endColumn":65},{"ruleId":"100","severity":1,"message":"101","line":30,"column":46,"nodeType":"102","messageId":"103","endLine":30,"endColumn":48},{"ruleId":"105","severity":1,"message":"110","line":75,"column":1,"nodeType":"107","messageId":"111","endLine":81,"endColumn":33},"no-unused-vars","'PasticheHeader' is defined but never used.","Identifier","unusedVar","'Wrapper' is assigned a value but never used.","'Header' is defined but never used.","'styled' is defined but never used.","no-dupe-keys","Duplicate key 'creator'.","ObjectExpression","unexpected","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'ProfileList' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'RandDCard' is defined but never used.","Block is redundant.","redundantBlock","no-global-assign","no-unsafe-negation"]